# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Tests for app/vulnerability.py."""

import unittest
import app.vulnerability as vuln

from tests.test_base import FlaskTest
from data.models import Vulnerability, VulnerabilityGitCommits
from data.database import db

dummy_vuln1 = Vulnerability(
    cve_id='CVE-1337',
    commits=[],
    comment="Test comment.",
)
dummy_vuln2 = Vulnerability(
    cve_id='CVE-1339',
    commits=[],
    comment="Test comment2.",
)
dummy_vulns = [dummy_vuln1, dummy_vuln2]

# commits=[
#             VulnerabilityGitCommits(
#                 commit_link='https://github.com/0WN3R/REP0',
#                 commit_hash='F00D',
#                 repo_name='REP0',
#                 repo_owner='0WN3R',
#                 repo_url='https://github.com/0WN3R/REP0',
#             )
#         ],


class TestVulnerbility(FlaskTest):

    @classmethod
    def setUpClass(cls):
        super(TestVulnerbility, cls).setUpClass()
        db.session.add_all(dummy_vulns)
        db.session.commit()

    @classmethod
    def tearDownClass(cls):
        for dummy_vuln in dummy_vulns:
            db.session.delete(dummy_vuln)
        db.session.commit()
        super(TestVulnerbility, cls).tearDownClass()

    def test_getVulnerability(self):
        actual_vuln = vuln.getVulnerability({"cve_id": 'CVE-1337'})
        self.assertEqual(actual_vuln, dummy_vuln1)


if __name__ == '__main__':
    unittest.main()
